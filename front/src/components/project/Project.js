import React, { useEffect, useState, useContext } from 'react';
import Card from 'react-bootstrap/Card';
import * as API from '../../api';


//bootstrap
import Button from 'react-bootstrap/Button';
import Accordion from 'react-bootstrap/Accordion';
import Badge from 'react-bootstrap/Badge';


//component
import AddProjectForm from './AddProjectForm';
import EditProjectForm from './EditProjectForm';
import ProjectImages from './ProjectImages';




const Project = ({ portfolioOwnerId, isEditable }) => {
    //state
    const [addToggle, setAddToggle] = useState(false);
    const [editToggle, setEditToggle] = useState(false);
    const [projects, setProjects] = useState([
        // {
        //     name: '',
        //     text: '',
        //     skill: '',
        //     link: null,
        //     imagePaths: [],
        // }
    ]);


    // getÏöîÏ≤≠ÏúºÎ°ú dummyÌååÏùºÏóêÏÑú Î∂àÎü¨Ïò® Í∞íÎì§ÏùÑ Ïù¥Ïö©ÌïòÎ©¥ Í∞ÅÏûêÏùò dummyÌååÏùº ÌòïÏãùÏù¥ Îã¨ÎùºÏÑú 
    // Î∏åÎûúÏπò Î®∏ÏßÄÌï†Îïå Ïª¥Ìè¨ÎÑåÌä∏ ÏóêÎü¨ Î∞úÏÉùÌï†Ïàò ÏûàÍ∏∞ÎïåÎ¨∏Ïóê ÏùºÎã® Í∑∏ÎÉ• Ïó¨Í∏∞ÏÑú ÎçîÎØ∏Îç∞Ïù¥ÌÑ∞ ÎÑ£ÏóàÏäµÎãàÎã§.
    useEffect(() => {
        // API.get('dummy.json').then(v => console.log(v));
        // API.get(`users/${portfolioOwnerId}/projects`).then(res => setProjects(res));
        // API.get(`projectlist/${portfolioOwnerId}`).then(setProjects);
        // API.delete(`project/bfe36de9-33e8-4e96-bf5a-ea020643e28a/delete`).then(setProjects);
        // API.put(`projects/3f38c7d8-1a1d-43a9-b93b-fec0431321ed`, { title: 'ÏàòÏ†ï ÌÖåÏä§Ìä∏', description: 'ÏàòÏ†ï ÌÖåÏä§Ìä∏ ÎÇ¥Ïö©' }).then(setProjects);
        setProjects([
            {
                "name": "ÎçîÎØ∏ ÌîÑÎ°úÏ†ùÌä∏ 2",
                "text": "ÎçîÎØ∏ ÌîÑÎ°úÏ†ùÌä∏ 2Ïùò ÏÑ§Î™Ö ÎÇ¥Ïö© ÏûÖÎãàÎã§...",
                "skill": "JS React.JS Mongo.DB Bootstrap",
                "link": null,
                "imagePaths": [],
            },
            {
                "name": "ÎçîÎØ∏ ÌîÑÎ°úÏ†ùÌä∏ 1",
                "text": "ÎçîÎØ∏ ÌîÑÎ°úÏ†ùÌä∏ 1Ïùò ÏÑ§Î™Ö ÎÇ¥Ïö© ÏûÖÎãàÎã§...",
                "skill": "TS React.JS Mongo.DB AntDesign",
                "link": null,
                "imagePaths": [],
            }
        ]);
    }, []);

    const deleteProjectHandleer = (name, index) => {
        const ans = window.confirm(`[${name}] ÌîÑÎ°úÏ†ùÌä∏Î•º ÏßÄÏö∞ÏãúÍ≤†ÏäµÎãàÍπå?`);
        if (ans) {
            console.log('delete ditpatch, index', index);

            //filterÎäî ÎπÑÌååÍ¥¥Ìòï Î©îÏÜåÎìú;;
            const tempProjects = [...projects].filter((v, i) => i !== index);
            setProjects(tempProjects);
        }
    }
    useEffect(() => {
        console.log(projects);
    }, [projects]);
    return (
        <Card className='p-3 border'>
            <Card.Body>
                {!addToggle &&
                    <>
                        <h2>üßëüèª‚Äçüíª ÌîÑÎ°úÏ†ùÌä∏</h2>
                        <div className="dropdown-divider"></div>
                        <Accordion className='mt-3' defaultActiveKey={0}>
                            {projects?.map((v, i) => {
                                console.log(v.name, v.text);
                                return <Accordion.Item eventKey={i} key={v.name}>
                                    <Accordion.Header onClick={() => { setEditToggle(false) }}>
                                        <h5 style={{ fontWeight: '600' }}>{v.name}</h5>
                                        {v.link && <a style={{ textDecoration: 'none' }}
                                            className='ms-2'
                                            href={v.link}
                                            target='_blank'
                                            rel="noreferrer">üîó</a>}
                                    </Accordion.Header>
                                    <Accordion.Body>
                                        {/* Ïù¥ÎØ∏ÏßÄ Ï≤òÎ¶¨ Íµ¨ÌòÑÎêòÎ©¥ ÌôúÏÑ±Ìôî */}
                                        <ProjectImages imagePaths={v.imagePaths} />

                                        <div className='mt-3'>{v.text.split('\n').map(v => <React.Fragment key={v}>{v}<br /></React.Fragment>)}</div>
                                        <div className='mt-3 mb-3'>
                                            {
                                                // Î©îÏÜåÎìúÎ•º ÏÇ¨Ïö©ÌïòÎäî Í∞ùÏ≤¥Í∞Ä Ï°¥ÌïòÎäîÏßÄ ÌôïÏù∏!
                                                // v.skillÏù¥ ÏóÜÏùÑÎïå split Î©îÏÜåÎìú ÏÇ¨Ïö©Ïãú ÏóêÎü¨Î∞úÏÉù, Î∞òÎìúÏãú Ï°¥Ïû¨ÌïòÎäîÏßÄ ÌôïÏù∏Î∂ÄÌÑ∞!!
                                                v?.skill?.split(' ').map(v => <Badge className='me-1' pill bg="primary" key={v}>{v}</Badge>)}
                                        </div>
                                        <div className='mt-3' style={{ textAlign: 'center' }}>
                                            {!editToggle ?
                                                <div className='mt-5 mb-5'>
                                                    <Button
                                                        onClick={() => { setEditToggle(true) }}
                                                        variant="outline-warning">ÏàòÏ†ï</Button>
                                                    <Button
                                                        className='ms-3'
                                                        onClick={() => { deleteProjectHandleer(v.name, i) }}
                                                        variant="outline-danger">ÏÇ≠Ï†ú</Button>
                                                </div>
                                                : <EditProjectForm
                                                    index={i}
                                                    projects={projects}
                                                    setProjects={setProjects}
                                                    setEditToggle={(boolean) => { setEditToggle(boolean) }} />}
                                        </div>
                                    </Accordion.Body>
                                </Accordion.Item>
                            }
                            )}
                        </Accordion>
                        <div className='mt-3 mb-3' style={{ textAlign: 'center' }}>
                            <Button className='mt-3' onClick={() => { setAddToggle(true) }}>+</Button>
                        </div>
                    </>
                }
                {addToggle && <AddProjectForm
                    projects={projects}
                    setProjects={setProjects}
                    setAddToggle={e => { setAddToggle(e) }}
                />}
            </Card.Body>
        </Card >
    );
}

export default Project;